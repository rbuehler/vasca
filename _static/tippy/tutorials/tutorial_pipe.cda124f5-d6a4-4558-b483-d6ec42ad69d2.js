selector_to_html = {"a[href=\"https://en.wikipedia.org/wiki/Umask\"]": "<p>In computing, <b><code>umask</code></b> is a command that determines the settings of a mask that controls how file permissions are set for newly created files. It may also affect how the file permissions are changed explicitly. <code class=\"mw-highlight mw-highlight-lang-text mw-content-ltr\" dir=\"ltr\">umask</code> is also a function that sets the mask, or it may refer to the mask itself, which is formally known as the <i><b>file mode creation mask</b></i>. The mask is a grouping of bits, each of which restricts how its corresponding permission is set for newly created files. The bits in the mask may be changed by invoking the <code class=\"mw-highlight mw-highlight-lang-text mw-content-ltr\" dir=\"ltr\">umask</code> command.</p>", "a[href^=\"https://en.wikipedia.org/wiki/Umask#\"]": "<p>In computing, <b><code>umask</code></b> is a command that determines the settings of a mask that controls how file permissions are set for newly created files. It may also affect how the file permissions are changed explicitly. <code class=\"mw-highlight mw-highlight-lang-text mw-content-ltr\" dir=\"ltr\">umask</code> is also a function that sets the mask, or it may refer to the mask itself, which is formally known as the <i><b>file mode creation mask</b></i>. The mask is a grouping of bits, each of which restricts how its corresponding permission is set for newly created files. The bits in the mask may be changed by invoking the <code class=\"mw-highlight mw-highlight-lang-text mw-content-ltr\" dir=\"ltr\">umask</code> command.</p>", "a[href=\"https://en.wikipedia.org/wiki/Pan-STARRS\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/en/thumb/2/2c/PanSTARRS4c_420.png/320px-PanSTARRS4c_420.png\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p>The <b>Panoramic Survey Telescope and Rapid Response System</b> located at Haleakala Observatory, Hawaii, US, consists of astronomical cameras, telescopes and a computing facility that is surveying the sky for moving or variable objects on a continual basis, and also producing accurate astrometry and photometry of already-detected objects. In January 2019 the second Pan-STARRS data release was announced. At 1.6 petabytes, it is the largest volume of astronomical data ever released.</p>", "a[href^=\"https://en.wikipedia.org/wiki/Pan-STARRS#\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/en/thumb/2/2c/PanSTARRS4c_420.png/320px-PanSTARRS4c_420.png\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p>The <b>Panoramic Survey Telescope and Rapid Response System</b> located at Haleakala Observatory, Hawaii, US, consists of astronomical cameras, telescopes and a computing facility that is surveying the sky for moving or variable objects on a continual basis, and also producing accurate astrometry and photometry of already-detected objects. In January 2019 the second Pan-STARRS data release was announced. At 1.6 petabytes, it is the largest volume of astronomical data ever released.</p>", "a[href=\"../api/vasca/vasca.region.html#vasca.region.Region\"]": "<dt class=\"sig sig-object py\" id=\"vasca.region.Region\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">vasca.region.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Region</span></span><a class=\"reference internal\" href=\"../_modules/vasca/region.html#Region\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt><dd><p>Bases: <a class=\"reference internal\" href=\"../api/vasca/vasca.tables.html#vasca.tables.TableCollection\" title=\"vasca.tables.TableCollection\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">vasca.tables.TableCollection</span></code></a></p><p>Defines a region in the sky as a\nlist of vasca.field objects. It provides functionality to\nloop over fields to derive source lists, etc.</p><p class=\"rubric\">Initialization</p><p>Many class attributes are stored in <a class=\"reference external\" href=\"https://docs.astropy.org/en/stable/api/astropy.table.Table.html\">astropy.table.Table</a>. To see a\ndescription of each of their columns run :meth: <cite>~vasca.Regions.info</cite>.</p><p>None</p></dd>", "a[href=\"#galex-fields-ps1-10jh\"]": "<figure class=\"align-default\" id=\"galex-fields-ps1-10jh\">\n<a class=\"bg-primary mb-1 reference internal image-reference\" href=\"../_images/GALEX_fields_ps1-10jh.jpg\"><img alt=\"galex_fields_ps1-10jh\" class=\"bg-primary mb-1\" src=\"../_images/GALEX_fields_ps1-10jh.jpg\" style=\"width: 400px;\"/></a>\n<figcaption>\n<p><span class=\"caption-text\">Field footprints for GALEX observations around the location of PS1-10jh (purple\ncrosshair). Sreenshot from <a class=\"reference external\" href=\"https://mast.stsci.edu/portal/Mashup/Clients/Mast/Portal.html\">MAST Portal</a></span><a class=\"headerlink\" href=\"#galex-fields-ps1-10jh\" title=\"Link to this image\">\u00b6</a></p>\n</figcaption>\n</figure>", "a[href=\"#pipeline\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Pipeline<a class=\"headerlink\" href=\"#pipeline\" title=\"Link to this heading\">\u00b6</a></h1><p>This is a tutorial showcasing VASCA\u2019s pipeline flow on a simple example. We will go through\nall the steps equivalent to what is done in <a class=\"reference internal\" href=\"../api/vasca/vasca.vasca_pipe.html#vasca.vasca_pipe.run_from_file\" title=\"vasca.vasca_pipe.run_from_file\"><code class=\"xref myst py py-func docutils literal notranslate\"><span class=\"pre\">vasca_pipe.run_from_file</span></code></a>. The goal\nis to create a VASCA <a class=\"reference internal\" href=\"../api/vasca/vasca.region.html#vasca.region.Region\" title=\"vasca.region.Region\"><code class=\"xref myst py py-class docutils literal notranslate\"><span class=\"pre\">Region</span></code></a> from multiple <a class=\"reference internal\" href=\"../api/vasca/vasca.field.html#vasca.field.GALEXField\" title=\"vasca.field.GALEXField\"><code class=\"xref myst py py-class docutils literal notranslate\"><span class=\"pre\">GALEXField</span></code></a> for which we download the\nraw data online from <a class=\"reference external\" href=\"https://astroquery.readthedocs.io/en/latest/mast/mast.html\">MAST</a>.\nWe apply quality cuts and do source clustering followed by variability analysis and\nfinally source cross-matching.</p><p>For this tutorial we are interested in the near-ultraviolet (NUV) observations\nby GALEX. We are going to look at neighboring/overlapping fields all of which\ncontain the location of famous Tidal Disruption Event <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Pan-STARRS#Selected_discoveries\"><em>PS1-10jh</em></a> discovered by Pan-STARRS and observed by GALEX in 2010.</p>", "a[href=\"#general-configuration\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">General Configuration<a class=\"headerlink\" href=\"#general-configuration\" title=\"Link to this heading\">\u00b6</a></h2><p>The standard pipeline processing starts by reading a yaml file. To keep this tutorial\nsimple, we are going to introduce parts of the configuration step by step at the point\nwhere they are required in the pipeline flow.</p>", "a[href=\"../api/vasca/vasca.field.html#vasca.field.GALEXField\"]": "<dt class=\"sig sig-object py\" id=\"vasca.field.GALEXField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">vasca.field.</span></span><span class=\"sig-name descname\"><span class=\"pre\">GALEXField</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">obs_id</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">obs_filter</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data_path</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visits_data_path</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/vasca/field.html#GALEXField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt><dd><p>Bases: <a class=\"reference internal\" href=\"#vasca.field.BaseField\" title=\"vasca.field.BaseField\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">vasca.field.BaseField</span></code></a></p><p>Instance of one GALEX field</p><p class=\"rubric\">Initialization</p><p>Initializes a new GALEXField instance with\nskeleton VASCA data structure.</p></dd>", "a[href=\"../user_guide/data_model.html#term-tt_fields\"]": "<dt id=\"term-tt_fields\"><strong><code class=\"docutils literal notranslate\"><span class=\"pre\">tt_fields</span></code></strong></dt><dd><p>Table storing metadata about all fields such as the field ID (<code class=\"docutils literal notranslate\"><span class=\"pre\">field_id</span></code>), the center\ncoordinates (<code class=\"docutils literal notranslate\"><span class=\"pre\">ra</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">dec</span></code>), total exposure time (<code class=\"docutils literal notranslate\"><span class=\"pre\">time_bin_size_sum</span></code>) and the size of the\nfield of view (<code class=\"docutils literal notranslate\"><span class=\"pre\">r_fov</span></code>).</p></dd>", "a[href=\"../api/vasca/vasca.vasca_pipe.html#vasca.vasca_pipe.run_from_file\"]": "<dt class=\"sig sig-object py\" id=\"vasca.vasca_pipe.run_from_file\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">vasca.vasca_pipe.</span></span><span class=\"sig-name descname\"><span class=\"pre\">run_from_file</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/vasca/vasca_pipe.html#run_from_file\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt><dd><p>Run VASCA pipeline from a configuration file passed with the ArgumentParser</p><p>None</p></dd>", "a[href=\"#resources\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Resources<a class=\"headerlink\" href=\"#resources\" title=\"Link to this heading\">\u00b6</a></h2><p>Next is the section about resource handling. This specifies the method used to load\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">load_method</span></code>) field data and which data products should be included (tables,\ntables plus visit-level images, or only metadata <code class=\"docutils literal notranslate\"><span class=\"pre\">load_products</span></code>). Additionally\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">coadd_exists</span></code> flag tells the pipeline wether it can expect co-added (field-\naveraged) data. Finally, <code class=\"docutils literal notranslate\"><span class=\"pre\">field_kwargs</span></code> allows to pass parameters directly to\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">init</span></code> function of a field class.</p><p>Here we are going to initialize fields from local raw data, if present. Else the\nrequired data is downloaded from MAST. All data products will be included including\nco-add data. Using the <a class=\"reference internal\" href=\"../api/vasca/vasca.resource_manager.html#vasca.resource_manager.ResourceManager\" title=\"vasca.resource_manager.ResourceManager\"><code class=\"xref myst py py-class docutils literal notranslate\"><span class=\"pre\">ResourceManager</span></code></a> we can tell the field class where to\nlocate the data.</p>", "a[href=\"#observations\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Observations<a class=\"headerlink\" href=\"#observations\" title=\"Link to this heading\">\u00b6</a></h2><p>The observations section of the configuration is responsible for configuring\nwhich combination of instrument (<code class=\"docutils literal notranslate\"><span class=\"pre\">observatory</span></code>) and filter (<code class=\"docutils literal notranslate\"><span class=\"pre\">obs_filter</span></code>)to\nload data. Also it specifies the exact list of fields to load (<code class=\"docutils literal notranslate\"><span class=\"pre\">obs_field_ids</span></code>).</p><p>In a later step we will also add here the selection parameters (<code class=\"docutils literal notranslate\"><span class=\"pre\">selection</span></code>) used\nfor the quality cuts on the data and the field-level clustering settings\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">cluster_det</span></code>).</p>", "a[href=\"../api/vasca/vasca.resource_manager.html#vasca.resource_manager.ResourceManager\"]": "<dt class=\"sig sig-object py\" id=\"vasca.resource_manager.ResourceManager\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">vasca.resource_manager.</span></span><span class=\"sig-name descname\"><span class=\"pre\">ResourceManager</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../_modules/vasca/resource_manager.html#ResourceManager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt><dd><p>Manages access to external resources.</p><p>Resources like catalog files or large metadata files may be stored on\nremote storage systems such as DESY Sync &amp; Share (SAS) or LUSTRE.\nUsers may synchronize these resources onto their local systems\nto perform software analysis on the data. To aid collaborative development,\nthe <cite>ResourceManager</cite> provides an interface to find the locations of resources\non the user\u2019s local system.</p><p>The implementation requires a set of environment variables. The full list\nof variables is defined in <cite>CLASSDIR/resource_metadata/resource_envs.yml</cite>.\nUsers need to make sure these variables are known to the system. This can be\nachieved in two ways. Either the user manually sets each variable via\nthe shell config file (<cite>.bashrc</cite>, <cite>zshrc</cite>, etc.) or the instance of\n<cite>ResourceManager</cite> automatically sets the variables if the config file at\n<cite>PACKAGEDIR/.env</cite> is found.</p><p class=\"rubric\">Initialization</p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(`div.content ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,
                onShow(instance) {MathJax.typesetPromise([instance.popper]).then(() => {});},
            });
        };
    };
    console.log("tippy tips loaded!");
};
