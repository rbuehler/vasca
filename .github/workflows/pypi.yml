# From: https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/#publishing-package-distribution-releases-using-github-actions-ci-cd-workflows

name: üöÄ pypi

on: 
  push

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
  
  publish-to-pypi:
    name: >-
      Publish Python üêç distribution üì¶ to PyPI
    if: startsWith(github.ref, 'refs/tags/') && github.repository == 'rbuehler/vasca'
    needs:
      - build
    runs-on: ubuntu-latest
    
    environment:
      name: pypi
      url: https://pypi.org/p/vasca
    
    permissions:
      id-token: write
    
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
  
  github-release:
    name: >-
      Sign the Python üêç distribution üì¶ with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      id-token: write
    
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    
    - name: Set up Python virtual environment
      run: |
        python3 -m venv venv
        source venv/bin/activate
    
    - name: Install Sigstore dependencies in the virtual environment
      run: |
        pip install --upgrade pip
        pip install sigstore
    
    - name: Sign the dists with Sigstore
      run: |
        source venv/bin/activate
        sigstore sign ./dist/*.tar.gz ./dist/*.whl
    
    # - name: Sign the dists with Sigstore
    #   uses: sigstore/gh-action-sigstore-python@v2.1.1
    #   with:
    #     inputs: >-
    #       ./dist/*.tar.gz
    #       ./dist/*.whl
    #     internal-be-careful-debug: true
    
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes ""
    
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'
  
  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    if: github.repository == 'rbuehler/vasca'
    needs:
    - build
    runs-on: ubuntu-latest
    
    environment:
      name: testpypi
      url: https://test.pypi.org/p/vasca
    
    permissions:
      id-token: write
    
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Modify version for TestPyPI
      run: |
        ls -la  # To confirm the file exists
        sed -i 's/version = "1.0.0"/version = "1.0.0.dev${{ github.run_number }}"/' pyproject.toml
    
    - name: Publish distribution üì¶ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/